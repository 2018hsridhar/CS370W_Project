#include <igl/readOFF.h>
#include <igl/viewer/Viewer.h>
#include "tutorial_shared_path.h"
#include <igl/rotation_matrix_from_directions.h>
#include <igl/writeOFF.h>

Eigen::MatrixXd V;
Eigen::MatrixXi F;

Eigen::MatrixXd V_rotated;
Eigen::MatrixXi F_rotated;

// function is called when keyboard buttons are pressed down. useful for alternating amongst a set of differing views
bool key_down( igl::viewer::Viewer& viewer, unsigned char key, int modifier)
{
  std::cout << "Key : " << key << (unsigned int) key << std::endl;
  if ( key == '1' )
  {
    // clear data before drawing mesh
    viewer.data.clear();
    viewer.data.set_mesh(V,F);
    viewer.core.align_camera_center(V,F); // why is this needed?
  }
  else if ( key == '2' ) 
  {
    // clear data before drawing mesh
    viewer.data.clear();
    viewer.data.set_mesh(V_rotated,F_rotated);
    viewer.core.align_camera_center(V_rotated,F_rotated); // why is this needed?
  } 
  else if ( key == '3' ) 
  {
    viewer.data.clear();
    viewer.data.set_mesh(V_rotated,F_rotated);
    viewer.core.align_camera_center(V_rotated,F_rotated); // why is this needed?
    
  }
  return false;
}

int main(int argc, char *argv[])
{
  // Load a mesh in OFF format
  //igl::readOFF(TUTORIAL_SHARED_PATH "/camelhead.off", V, F);
  igl::readOFF(TUTORIAL_SHARED_PATH "/planexy.off", V, F);
  std::cout << R"(
1 switch to identity view
2 Switch to rotated view 1
3 Keep updating rotated view by (1) 
    )";

  // generate rotation along x-axis ( multiply -z * y ) 
  Eigen::Vector3d e1 ( 0, 0, -1 ); 
  Eigen::Vector3d e2 ( 0, 1, 0 ); 

  // one particular issue atm :: this rotation always works by 90-degree angles !!
  Eigen::MatrixXd rot_matrix = igl::rotation_matrix_from_directions (e1, e2 );
  Eigen::MatrixXd transformMat = (rot_matrix * rot_matrix);
  //Eigen::VectorXd translate_yaxis = Eigen::Vector3d(0,-1,0);  // u idiot. u are centering the camera. u won't see this !
  Eigen::VectorXd translate_yaxis = Eigen::Vector3d(0,0,-1);  // u idiot. u are centering the camera. u won't see this !

 // V_rotated = V * transformMat;
  V_rotated = (V*transformMat).rowwise() + translate_yaxis.transpose(); //
  /*
for(int i = 0; i < V_rotated.rows(); i++) 
  {
      V_rotated.row(i) += translate_yaxis.transpose();
  }
*/

  F_rotated = F; 
  //igl::writeOFF("camelhead2.off", V_rotated,F_rotated);
  igl::writeOFF("planexy2.off", V_rotated,F_rotated);

  // Plot the ROTATED mesh 
  igl::viewer::Viewer viewer;
  viewer.callback_key_down = &key_down;
  viewer.data.set_mesh(V, F);
  viewer.launch();


}


